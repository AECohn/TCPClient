//Programmer: Aviv Cohn

#DEFAULT_VOLATILE
#ENABLE_STACK_CHECKING
#ENABLE_TRACE

#User_SimplSharp_Library "TCPCLient"

String_Input Address[65534], TX[65534], QueueMilliseconds[65534];
String_Output RX;
Analog_Input PortNumber;
Digital_Input Connect, EnableQueue;
Digital_Output Connected;

TcpConnection myConnection;




Push Connect
{

   myConnection.Connect(Address, PortNumber);
}

Release Connect
{
 myConnection.Disconnect();
}

Change TX
{
       myConnection.Write(TX);
}

Push EnableQueue
{
	if(QueueMilliseconds = "" || QueueMilliseconds = "0")
    {
		QueueMilliseconds = "1";
	}
 myConnection.EnableQueue(QueueMilliseconds);
}

Release EnableQueue
{
 myConnection.DisableQueue();
}


eventhandler ReceivedData(TcpConnection sender, SendArgs args)
{
  RX = args.Data; //consider sending the string through the event
//Trace("RX = %s args.Response = %s", RX, args.Response); 

}

eventhandler ConnectionFeedback(TcpConnection sender, SendArgs args)
{
	if(args.Data =  "Connected")
	{
     Connected = 1;
	}
	else if(args.Data = "Could not Connect")
		{
         Connected = 0;
		}
}


function main()

{
 RegisterEvent(myConnection, DataReceived, ReceivedData);
RegisterEvent(myConnection, ConnectionStatus, ConnectionFeedback);

}



